{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/scene/Lighting.js","webpack:///./src/scene/Box.js","webpack:///./src/scene/WireBox.js","webpack:///./src/scene/OffCenterCamera.js","webpack:///./src/scene/FaceTracker.js","webpack:///./src/scene/Suzanne.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","WebGLApp","_this","this","_ref","arguments","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","_classCallCheck","_updateListeners","writable","_tmpTarget","THREE","_rafID","_lastTime","resize","_ref2","_ref2$width","width","innerWidth","_ref2$height","height","innerHeight","_ref2$pixelRatio","pixelRatio","Math","min","maxPixelRatio","devicePixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","scene","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","orbitControls","up","fromArray","position","_classPrivateFieldLooseBase","target","lookAt","world","step","bodies","forEach","body","tween","fn","passes","pass","isLastElement","renderToScreen","render","start","requestAnimationFrame","animate","isRunning","stop","cancelAnimationFrame","stats","begin","now","performance","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","setClearColor","gl","getContext","addEventListener","touchHandler","createTouches","filtered","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","createOrbitControls","element","parent","distance","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","closeControls","controlsElement","querySelector","style","display","click","gpu","getGPUTier","glContext","type","tier","Number","isMobile","toLowerCase","includes","blob","dataURIToBlob","link","createElement","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","loadTexture","_x","_x2","_loadTexture","_callee","url","texture","image","regeneratorRuntime","wrap","_context","prev","next","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","initTexture","abrupt","t0","Error","concat","opt","flipY","mapping","format","isJPEG","search","repeat","copy","wrapS","wrapT","minFilter","magFilter","generateMipmaps","loadEnvMap","_loadEnvMap","cubeRenderTarget","cubeMapTexture","basePath","isHDR","extension","urls","equirectangular","fromEquirectangularTexture","renderTarget","dispose","buildCubeMap","hdr","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","map","cubeMap","pbr","level","pmremGenerator","PMREMGenerator","pmremCubeUVPacker","PMREMCubeUVPacker","cubeLods","CubeUVRenderTarget","idx","clamp","floor","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","GLTFLoader","err","fetch","then","response","json","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","hdrKey","assets","Box","webgl","Box_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","color","geometry","material","setZ","boxes","k","box","setX","setY","add","visible","enableCalibrationMarkers","scale","x","abs","sin","y","z","WireBox","WireBox_classCallCheck","WireBox_possibleConstructorReturn","WireBox_getPrototypeOf","_this$options","_this$options$width","_this$options$height","_this$options$depth","depth","_this$options$widthSe","widthSegments","_this$options$heightS","heightSegments","_this$options$depthSe","depthSegments","_this$options$color","wireframe","calibrationMarkers","greenCircle","PI","set","redCircle","greenSquare","redSquare","greenDiamond","rotation","redDiamond","OffCenterCamera","faceTracker","OffCenterCamera_classCallCheck","OffCenterCamera_possibleConstructorReturn","OffCenterCamera_getPrototypeOf","_objectDestructuringEmpty","ar","vo","setViewOffset","radToDeg","atan","FaceTracker","FaceTracker_classCallCheck","FaceTracker_possibleConstructorReturn","FaceTracker_getPrototypeOf","debugElement","getElementById","webcamVideo","webcamCanvas","setAttribute","clientWidth","clientHeight","navigator","mediaDevices","getUserMedia","video","webcamStream","srcObject","faceapi","detectorOptions","updateTracking","debug","debugFaceTracker","detection","detectionWithLandmarksForSize","drawDetections","drawFaceLandmarks","rawData","extractDetectionData","ctx","fillStyle","fillRect","eyeLeft","eyeRight","eyeMiddle","withFaceLandmarks","landmarks","Point","avgX","avgY","lEye","avgLandmark","getLeftEye","rEye","getRightEye","faceArea","area","localStorage","depthBias","widthBias","heightBias","offsetXBias","offsetYBias","rawDataHistory","max","eyesX","eyesY","sqrt","runDetectionTask","computeWorldPosition","updateDebug","location","Instructions","instructions","Raw","h","Step 1 - Calibrate Face Offset","Step 2 - Calibrate webcam/viewport width","Step 3 - Calibrate webcam/viewport height","Step 4 - Calibrate webcam/viewport depth","Slider","label","Checkbox","resetCalibration","clear","reload","visibility","setup","offCenterCamera","suzanne","hemiLight","setHSL","groundColor","dirLight","multiplyScalar","addNaturalLight","screenshotButton","bottom","right","cursor","padding","fontSize","textContent","addScreenshotButton"],"mappings":"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","file":"app.11406c48.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([225,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #rafID\n  #lastTime\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n    this.#rafID = null\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.touchHandler.on('start', (ev, pos) => this.traverse('onPointerDown', ev, pos))\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => this.traverse('onPointerUp', ev, pos))\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.orbitControls = createOrbitControls({\n        element: this.canvas,\n        parent: window,\n        distance: 5,\n        ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n      })\n\n      // move the camera position accordingly to the orbitcontrols options\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.camera.lookAt(new THREE.Vector3().fromArray(this.orbitControls.target))\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) this.world = options.world\n\n    // Attach Tween.js\n    if (options.tween) this.tween = options.tween\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      const controlsState = State(options.controls)\n      this.controls = options.hideControls ? controlsState : wrapGUI(controlsState)\n      if (options.closeControls) {\n        const controlsElement = document.querySelector('[class*=\"controlPanel\"]')\n\n        controlsElement.style.display = 'none'\n        const controlsButton = document.querySelector('[class*=\"controlPanel\"] button')\n        controlsButton.click()\n        controlsElement.style.display = 'block'\n      }\n    }\n\n    // detect the gpu info\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\n    this.gpu = {\n      name: gpu.type,\n      tier: Number(gpu.tier.slice(-1)),\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\n    }\n  }\n\n  resize = ({\n    width = window.innerWidth,\n    height = window.innerHeight,\n    pixelRatio = Math.min(this.maxPixelRatio, window.devicePixelRatio),\n  } = {}) => {\n    this.width = width\n    this.height = height\n    this.pixelRatio = pixelRatio\n\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse(obj => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      this.camera.up.fromArray(this.orbitControls.up)\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.#tmpTarget.fromArray(this.orbitControls.target)\n      this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse(obj => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(dt)\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach(body => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    if (this.tween) {\n      // update the Tween.js engine\n      this.tween.update()\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach(fn => fn(dt, time))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.#rafID !== null) return\n    this.#rafID = window.requestAnimationFrame(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (this.#rafID === null) return\n    window.cancelAnimationFrame(this.#rafID)\n    this.#rafID = null\n    this.isRunning = false\n    return this\n  }\n\n  animate = () => {\n    if (!this.isRunning) return\n    window.requestAnimationFrame(this.animate)\n\n    if (this.stats) this.stats.begin()\n\n    const now = performance.now()\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse(child => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport clamp from 'lodash/clamp'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport { PMREMGenerator } from 'three/examples/jsm/pmrem/PMREMGenerator'\nimport { PMREMCubeUVPacker } from 'three/examples/jsm/pmrem/PMREMCubeUVPacker'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`PBR Map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    const cubeRenderTarget = new THREE.WebGLRenderTargetCube(1024, 1024).fromEquirectangularTexture(\n      renderer,\n      texture\n    )\n\n    const cubeMapTexture = cubeRenderTarget.texture\n\n    // renderTarget is used for the scene.background\n    cubeMapTexture.renderTarget = cubeRenderTarget\n\n    texture.dispose() // dispose original texture\n    texture.image.data = null // remove Image reference\n\n    return buildCubeMap(cubeMapTexture, options)\n  }\n\n  const basePath = url\n\n  const isHDR = options.hdr\n  const extension = isHDR ? '.hdr' : '.png'\n  const urls = genCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (isHDR) {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        map => resolve(buildCubeMap(map, options)),\n        null,\n        () => reject(new Error(`Could not load PBR map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => {\n        cubeMap.encoding = THREE.RGBM16Encoding\n        resolve(buildCubeMap(cubeMap, options))\n      },\n      null,\n      () => reject(new Error(`Could not load PBR map: ${basePath}`))\n    )\n  })\n}\n\nfunction buildCubeMap(cubeMap, options) {\n  if (options.pbr || typeof options.level === 'number') {\n    // prefilter the environment map for irradiance\n    const pmremGenerator = new PMREMGenerator(cubeMap)\n    pmremGenerator.update(options.renderer)\n    if (options.pbr) {\n      const pmremCubeUVPacker = new PMREMCubeUVPacker(pmremGenerator.cubeLods)\n      pmremCubeUVPacker.update(options.renderer)\n      const target = pmremCubeUVPacker.CubeUVRenderTarget\n      cubeMap = target.texture\n      pmremCubeUVPacker.dispose()\n    } else {\n      const idx = clamp(Math.floor(options.level), 0, pmremGenerator.cubeLods.length)\n      cubeMap = pmremGenerator.cubeLods[idx].texture\n    }\n    pmremGenerator.dispose()\n  }\n  if (options.mapping) cubeMap.mapping = options.mapping\n  return cubeMap\n}\n\nfunction genCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find(item => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = url => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n    if (!(url in this.#cache)) {\n      throw new Error(`The asset ${url} is not in the loaded files.`)\n    }\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦  Could not load ${item.url}:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach(fn => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Skipping ${item.url} from asset loading:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach(fn => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter(log => log.type === 'error')\n\n      this.groupLog(\n        `📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱ ${\n          errors.length > 0\n            ? `%c ⚠️ Skipped ${errors.length} asset${errors.length > 1 ? 's' : ''} `\n            : ''\n        }`,\n        errors.length > 0 ? 'color:white;background:red;' : ''\n      )\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  async _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, err =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then(response => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach(log => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n});\n\nexport function addSkybox(webgl) {\n  // set the background as the hdr\n  webgl.scene.background = assets.get(hdrKey).renderTarget\n}\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n}\n\n// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = 'Save screenshot'\n  document.body.appendChild(screenshotButton)\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n}\n","import * as THREE from 'three'\n\n// basic three.js component example\n\nexport default class Box extends THREE.Group {\n  constructor(webgl, options) {\n    super(options)\n    // these can be used also in other methods\n    this.webgl = webgl\n    this.options = options\n\n    // destructure and default values like you do in React\n    const { color = 0x00ff00 } = this.options\n\n    const geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1)\n    const material = new THREE.MeshStandardMaterial()\n\n    this.position.setZ(-0.5)\n    this.boxes = []\n\n    const count = 5.0\n    for (let i = 0; i <= count; i++) {\n      for (let j = 0; j <= count; j++) {\n        for (let k = 0; k < count; k++) {\n          let box = new THREE.Mesh(geometry, material)\n          box.position.setX(i / count - 0.5)\n          box.position.setY(j / count - 0.5)\n          box.position.setZ(k / count - 0.5)\n          this.boxes.push(box);\n          this.add(box)\n        }\n      }\n    }\n  }\n\n  update(dt, time) {\n    this.visible = !this.webgl.controls.enableCalibrationMarkers\n    let i = 0;\n    this.boxes.forEach(box => {\n      // box.rotation.x = time - i\n      // box.rotation.y = time + i\n      // box.rotation.z = time + i\n      box.scale.x = Math.abs(Math.sin(time - i))\n      box.scale.y = Math.abs(Math.sin(time + i))\n      box.scale.z = Math.abs(Math.sin(time + i))\n      i++\n    });\n  }\n}\n","import * as THREE from 'three'\n\nexport default class WireBox extends THREE.Group {\n  /**\n   *\n   * @param {WebGLApp} webgl\n   * @param {{width: number, height: number, depth: number, widthSegments: number, heightSegments: number, depthSegments: number, color: number}} options\n   */\n  constructor(webgl, options) {\n    super(options)\n\n    this.webgl = webgl\n    this.options = options\n\n    const {\n      width = 1,\n      height = 1,\n      depth = 1,\n      widthSegments = 1,\n      heightSegments = 1,\n      depthSegments = 1,\n      color = 0xffffff\n    } = this.options\n\n    this.box = new THREE.Mesh(\n      new THREE.BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments),\n      new THREE.MeshBasicMaterial({ color: color, wireframe: true })\n    )\n\n    this.calibrationMarkers = new THREE.Group();\n\n    this.greenCircle = new THREE.Mesh(\n      new THREE.CircleGeometry(0.01, 20, 0, Math.PI * 2.0),\n      new THREE.MeshBasicMaterial({color: 0x00ff00 })\n    )\n    this.greenCircle.position.set (0, 0, depth*0.5 - 0.01)\n\n    this.redCircle = new THREE.Mesh(\n      new THREE.CircleGeometry(0.01, 20, 0, Math.PI * 2.0),\n      new THREE.MeshBasicMaterial({color: 0xff0000 })\n    )\n    this.redCircle.position.set (0, 0, -depth*0.5)\n\n    this.greenSquare = new THREE.Mesh(\n      new THREE.PlaneGeometry(0.02, 0.02, 1, 1),\n      new THREE.MeshBasicMaterial({color: 0x00ff00 })\n      )\n      this.greenSquare.position.set (-width*0.5, 0, depth*0.5 - 0.01)\n\n    this.redSquare = new THREE.Mesh(\n      new THREE.PlaneGeometry(0.02, 0.02, 1, 1),\n      new THREE.MeshBasicMaterial({color: 0xff0000 })\n    )\n    this.redSquare.position.set (-width*0.5, 0, -depth*0.5)\n\n    this.greenDiamond = new THREE.Mesh(\n      new THREE.PlaneGeometry(0.02, 0.02, 1, 1),\n      new THREE.MeshBasicMaterial({color: 0x00ff00 })\n      )\n    this.greenDiamond.position.set (0, height*0.5, depth*0.5 - 0.01)\n    this.greenDiamond.rotation.set (0, 0, Math.PI * 0.25)\n\n    this.redDiamond = new THREE.Mesh(\n      new THREE.PlaneGeometry(0.02, 0.02, 1, 1),\n      new THREE.MeshBasicMaterial({color: 0xff0000 })\n    )\n    this.redDiamond.position.set (0, height*0.5, -depth*0.5)\n    this.redDiamond.rotation.set (0, 0, Math.PI * 0.25)\n\n    this.calibrationMarkers.add(this.greenCircle)\n    this.calibrationMarkers.add(this.redCircle)\n    this.calibrationMarkers.add(this.greenSquare)\n    this.calibrationMarkers.add(this.redSquare)\n    this.calibrationMarkers.add(this.greenDiamond)\n    this.calibrationMarkers.add(this.redDiamond)\n\n\n    // add it to the group,\n    // later the group will be added to the scene\n    this.add(this.box)\n    this.add(this.calibrationMarkers)\n  }\n\n  update(dt, time) {\n    this.calibrationMarkers.visible = this.webgl.controls.enableCalibrationMarkers\n  }\n}\n","import * as THREE from 'three'\n\nexport default class OffCenterCamera extends THREE.Group {\n  constructor(webgl, options, faceTracker) {\n    super(options)\n    // these can be used also in other methods\n    this.webgl = webgl\n    this.options = options\n    this.faceTracker = faceTracker\n\n    // destructure and default values like you do in React\n    const { } = this.options\n\n    this.position.set(faceTracker.position.x, faceTracker.position.y, faceTracker.position.z)\n    webgl.camera.position.set(this.position.x, this.position.y, this.position.z)\n  }\n\n  update(dt, time) {\n    // Aspect ratio\n    let ar = window.innerHeight / window.innerWidth\n\n    // View Offset. It's the position of the viewer respect to the middle of the viewport.\n    // The coordinates are normalized so that the width of the viewport is 1 unit. Z points towards the viewer.\n    let vo = new THREE.Vector3(\n      this.faceTracker.position.x,\n      this.faceTracker.position.y,\n      this.faceTracker.position.z\n    )\n\n    // Set the position at viewer's point of view\n    this.webgl.camera.position.set(vo.x, vo.y, vo.z) // camera position\n    this.position.set(vo.x, vo.y, vo.z)              // this group's position. Useful if we want to nest objects\n\n    // Set the near plane in order to match the viewer's distance from the screen\n    this.webgl.camera.near = vo.z + 0.001 // Add a small offset in order to clip the front face of the box\n\n    // Offset camera projection in order to align the view frustum of the camera to the real viewer's one\n    this.webgl.camera.setViewOffset(1, ar, -vo.x, vo.y, 1, ar)\n\n    // Set the field of view so that the size of frustum's near face can match exactly the viewport as seen by the viewer\n    this.webgl.camera.fov = THREE.Math.radToDeg(2.0 * Math.atan(ar / (2.0 * vo.z)))\n  }\n}\n","import * as THREE from 'three'\nimport * as faceapi from 'face-api.js'\nimport { Point } from 'face-api.js'\n\nexport default class FaceTracker extends THREE.Group {\n  constructor(webgl, options) {\n    super(options)\n\n    this.webgl = webgl\n    this.options = options\n\n    this.debugElement = document.getElementById('face-tracker')\n    this.webcamVideo = document.getElementById('webcam-video')\n    this.webcamCanvas = document.getElementById('face-tracker-debug')\n\n    this.webcamVideo.setAttribute('width', this.webgl.canvas.clientWidth)\n    this.webcamVideo.setAttribute('height', this.webgl.canvas.clientHeight)\n    this.position.setZ(1);\n  }\n\n  async setup () {\n    const webcamStream = await navigator.mediaDevices.getUserMedia({ video: true })\n    this.webcamVideo.srcObject = webcamStream\n\n    await faceapi.loadTinyFaceDetectorModel('models/tiny_face_detector')\n    await faceapi.loadFaceLandmarkTinyModel('models/face_landmark_68_tiny')\n\n    this.detectorOptions = new faceapi.TinyFaceDetectorOptions()\n\n    this.updateTracking()\n  }\n\n  updateDebug() {\n    const debug = this.webgl.controls.debugFaceTracker\n    this.debugElement.style = debug ? \"visibility: visible\" : \"visibility: hidden\"\n\n    if (debug) {\n      this.debugElement.style = \"visibility: visible\"\n      this.webcamCanvas.width = this.webcamVideo.width\n      this.webcamCanvas.height = this.webcamVideo.height\n\n      if (this.detection){\n        // resize the detected boxes and landmarks in case your displayed image has a different size then the original\n        const detectionWithLandmarksForSize = faceapi\n          .resizeResults(this.detection, {\n            width: this.webcamVideo.width,\n            height: this.webcamVideo.height\n          })\n\n        faceapi.draw.drawDetections(this.webcamCanvas, detectionWithLandmarksForSize)\n        faceapi.draw.drawFaceLandmarks(this.webcamCanvas, detectionWithLandmarksForSize)\n\n        let rawData = this.extractDetectionData(detectionWithLandmarksForSize);\n\n        let ctx = this.webcamCanvas.getContext('2d')\n        ctx.fillStyle = '#00ff00';\n        ctx.fillRect(rawData.eyeLeft.x, rawData.eyeLeft.y, 5, 5)\n        ctx.fillRect(rawData.eyeRight.x, rawData.eyeRight.y, 5, 5)\n        ctx.fillRect(rawData.eyeMiddle.x, rawData.eyeMiddle.y, 10, 10)\n      }\n    }\n    else {\n      this.debugElement.style = \"visibility: hidden\"\n    }\n  }\n\n  runDetectionTask() {\n    return faceapi\n      .detectSingleFace(this.webcamVideo, this.detectorOptions)\n      .withFaceLandmarks(true)\n  }\n\n  avgLandmark (landmarks) {\n    if (landmarks.length == 0)\n      return new Point(0, 0);\n\n    let avgX = 0;\n    let avgY = 0;\n\n    landmarks.forEach(l => {\n      avgX += l.x;\n      avgY += l.y;\n    });\n\n    avgX /= landmarks.length;\n    avgY /= landmarks.length;\n\n    return new Point(avgX, avgY);\n  }\n\n  extractDetectionData(detection) {\n    let lEye = this.avgLandmark(detection.landmarks.getLeftEye())\n    let rEye = this.avgLandmark(detection.landmarks.getRightEye())\n\n    return {\n      eyeLeft: lEye,\n      eyeRight: rEye,\n      eyeMiddle: this.avgLandmark([lEye, rEye]),\n      faceArea: detection.detection.box.area\n    }\n  }\n\n  computeWorldPosition() {\n    if (this.detection) {\n      localStorage['depthBias'] = this.webgl.controls.depthBias\n      localStorage['widthBias'] = this.webgl.controls.widthBias\n      localStorage['heightBias'] = this.webgl.controls.heightBias\n      localStorage['offsetXBias'] = this.webgl.controls.offsetXBias\n      localStorage['offsetYBias'] = this.webgl.controls.offsetYBias\n\n      if (!this.rawDataHistory)\n        this.rawDataHistory = []\n\n      this.rawDataHistory.push(this.extractDetectionData(this.detection));\n      this.rawDataHistory = this.rawDataHistory.slice(Math.max(this.rawDataHistory.length - 5, 0))\n\n      let faceArea = 0;\n      let eyesX = 0;\n      let eyesY = 0;\n\n      this.rawDataHistory.forEach(rawData => {\n        faceArea += rawData.faceArea;\n        eyesX += rawData.eyeMiddle.x;\n        eyesY += rawData.eyeMiddle.y;\n      });\n\n      faceArea /= this.rawDataHistory.length;\n      eyesX /= this.rawDataHistory.length;\n      eyesY /= this.rawDataHistory.length;\n\n      eyesX = (-eyesX + this.webgl.controls.offsetXBias) / this.webgl.controls.widthBias\n      eyesY = (-eyesY + this.webgl.controls.offsetYBias) / this.webgl.controls.heightBias\n\n      // Depth\n      this.position.setZ(this.webgl.controls.depthBias / Math.sqrt(faceArea));\n      this.position.setX(eyesX)\n      this.position.setY(eyesY)\n    }\n  }\n\n  async updateTracking() {\n    this.detection = await this.runDetectionTask()\n    if (this.detection) {\n      this.computeWorldPosition()\n      this.updateDebug()\n    }\n    window.requestAnimationFrame(this.updateTracking.bind(this))\n  }\n}\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\n\n// elaborated three.js component example\n// containing example usage of\n//   - asset manager\n//   - control panel\n//   - touch events\n//   - postprocessing\n//   - screenshot saving\n\n// preload the suzanne model\nconst suzanneKey = assets.queue({\n  url: 'assets/suzanne.gltf',\n  type: 'gltf',\n})\n\n// preload the materials\nconst albedoKey = assets.queue({\n  url: 'assets/spotty-metal/albedo.jpg',\n  type: 'texture',\n})\nconst metalnessKey = assets.queue({\n  url: 'assets/spotty-metal/metalness.jpg',\n  type: 'texture',\n})\nconst roughnessKey = assets.queue({\n  url: 'assets/spotty-metal/roughness.jpg',\n  type: 'texture',\n})\nconst normalKey = assets.queue({\n  url: 'assets/spotty-metal/normal.jpg',\n  type: 'texture',\n})\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n})\n\nexport default class Suzanne extends THREE.Group {\n  constructor(webgl, options) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    const suzanneGltf = assets.get(suzanneKey)\n    const suzanne = suzanneGltf.scene.clone()\n\n    const material = new THREE.MeshStandardMaterial({\n      map: assets.get(albedoKey),\n      metalnessMap: assets.get(metalnessKey),\n      roughnessMap: assets.get(roughnessKey),\n      normalMap: assets.get(normalKey),\n      normalScale: new THREE.Vector2(2, 2),\n      envMap: assets.get(hdrKey),\n      roughness: 0.5,\n      metalness: 0.8,\n    })\n\n    // apply the material to the model\n    suzanne.traverse(child => {\n      if (child.isMesh) {\n        child.material = material\n      }\n    })\n\n    // make it a little bigger\n    suzanne.scale.multiplyScalar(2)\n\n    this.add(suzanne)\n\n    // set the background as the hdr\n    this.webgl.scene.background = assets.get(hdrKey).renderTarget\n  }\n\n  onPointerDown(event, [x, y]) {\n    // for example, check of we clicked on an\n    // object with raycasting\n    const coords = new THREE.Vector2().set(\n      (x / this.webgl.width) * 2 - 1,\n      (-y / this.webgl.height) * 2 + 1\n    )\n    const raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(coords, this.webgl.camera)\n    const hits = raycaster.intersectObject(this, true)\n    console.log(hits.length > 0 ? `Hit ${hits[0].object.name}!` : 'No hit')\n  }\n\n  onPointerMove(event, [x, y]) {}\n\n  onPointerUp(event, [x, y]) {}\n\n  update(dt, time) {\n    this.rotation.y += dt * this.webgl.controls.angularVelocity\n  }\n}\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n}\n\n// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = 'Save screenshot'\n  document.body.appendChild(screenshotButton)\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n}\n","import * as THREE from 'three'\nimport State from 'controls-state'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport { addNaturalLight, addScreenshotButton, addSkybox } from './scene/Lighting'\nimport passVert from './scene/shaders/pass.vert'\nimport vignetteFrag from './scene/shaders/vignette.frag'\nimport Box from \"./scene/Box\";\nimport WireBox from './scene/WireBox'\nimport OffCenterCamera from './scene/OffCenterCamera'\nimport FaceTracker from './scene/FaceTracker'\nimport Suzanne from './scene/Suzanne'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.getElementById('app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: '#000',\n  backgroundAlpha: 1,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  // enable postprocessing\n  // ⚠️ Warning! This disables antialiasing for the scene,\n  // at least until WebGL2 comes along in Three.js\n  postprocessing: true,\n  // enable orbit-controls with a z-distance of 5,\n  orbitControls: window.DEBUG && { distance: 5 },\n  // Add the controls-gui inputs\n  controls: {\n    Instructions: {\n      instructions: State.Raw(h => h('p', null, `\n        Hello! This is just a prototype of a face-tracking camera.\n        If this is the first time you are watching this demo,\n        please follow the instructions in order to calibrate the\n        face-tracking system. When you are finished you can close\n        this popup by clicking on \"controls\".\n      `)),\n      'Step 1 - Calibrate Face Offset': {\n        instructions: State.Raw(h => h('p', null, `\n          Enable the calibration markers.\n          Keep your face still in front of the green circle,\n          then adjust \"OffsetX Bias\" and \"OffsetY Bias\" until the\n          red circle completely disappears behind the green circle\n        `))\n      },\n      'Step 2 - Calibrate webcam/viewport width': {\n        instructions: State.Raw(h => h('p', null, `\n          Keep your face still in front of the green square,\n          then adjust \"Width Bias\" until the red square completely\n          disappears behind the green square\n        `))\n      },\n      'Step 3 - Calibrate webcam/viewport height': {\n        instructions: State.Raw(h => h('p', null, `\n          Keep your face still in front of the green diamond,\n          then adjust \"Height Bias\" until the red diamond completely\n          disappears behind the green diamond\n        `))\n      },\n      'Step 4 - Calibrate webcam/viewport depth': {\n        instructions: State.Raw(h => h('p', null, `\n          Adjust \"Depth Bias\" until you feel comfortable while moving\n          your head.\n          Disable the calibration markers.\n        `))\n      }\n    },\n    enableCalibrationMarkers: false,\n    offsetXBias: State.Slider(+localStorage['offsetXBias'] || 0.0, {\n      label: 'OffsetX Bias',\n      min: 0.00,\n      max: 4096.00,\n      step: 0.01\n    }),\n    offsetYBias: State.Slider(+localStorage['offsetYBias'] || 0.0, {\n      label: 'OffsetY Bias',\n      min: 0.00,\n      max: 4096.00,\n      step: 0.01\n    }),\n    widthBias: State.Slider(+localStorage['widthBias'] || 4096.0, {\n      label: 'Width Bias',\n      min: 1.00,\n      max: 4096.00,\n      step: 0.01\n    }),\n    heightBias: State.Slider(+localStorage['heightBias'] || 4096.0, {\n      label: 'Height Bias',\n      min: 1.00,\n      max: 4096.00,\n      step: 0.01\n    }),\n    depthBias: State.Slider(+localStorage['depthBias'] || 1000.0, {\n      label: 'Depth Bias',\n      min: 1.00,\n      max: 1000.00,\n      step: 0.01\n    }),\n    debugFaceTracker: State.Checkbox(false, {\n      label: 'Debug Face Tracker'\n    }),\n    resetCalibration: () => {\n      webgl.controls = {}\n      localStorage.clear()\n      window.location.reload()\n    }\n  }\n  // enable Cannon.js\n  // world: new CANNON.World(),\n  // enable Tween.js\n  // tween: TWEEN,\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets\n  .load({ renderer: webgl.renderer })\n  .then (() => {\n    webgl.scene.faceTracker = new FaceTracker(webgl, {})\n    return webgl.scene.faceTracker.setup()\n  })\n  .then(() => {\n    // show canvas\n    webgl.canvas.style.visibility = ''\n\n    webgl.scene.add(webgl.scene.faceTracker);\n\n    webgl.scene.offCenterCamera = new OffCenterCamera(webgl, {}, webgl.scene.faceTracker)\n    webgl.scene.add(webgl.scene.offCenterCamera);\n\n    webgl.scene.box = new WireBox(webgl, {\n      width: 1,\n      height: webgl.canvas.clientHeight / webgl.canvas.clientWidth,\n      depth: 1,\n      widthSegments: 10,\n      heightSegments: 10,\n      depthSegments: 10,\n      color: 0xffffff}\n    )\n    webgl.scene.box.position.z = -0.5;\n    webgl.scene.add(webgl.scene.box)\n\n    webgl.scene.suzanne = new Box(webgl, {})\n    webgl.scene.add(webgl.scene.suzanne)\n\n    // lights and other scene related stuff\n    addSkybox(webgl);\n    addNaturalLight(webgl)\n\n    // add the save screenshot button\n    if (window.DEBUG) {\n      addScreenshotButton(webgl)\n    }\n\n    // start animation loop\n    webgl.start()\n    webgl.draw()\n  })\n"],"sourceRoot":""}